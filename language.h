
#ifndef LANGUAGE_H
#define LANGUAGE_H


/* The supported language */
typedef enum
{
    LANG_VNI,   /* Vietnamese */
    LANG_ENG,   /* English */
    LANG_END    /* The end of languages */
} language_t;


/* The IDs of strings */
typedef enum
{
    LANG_ENTER_PASSWORD,
    LANG_ENTER_NEW_PASSWORD,
    LANG_ENTER_PASSWORD_AGAIN,
    LANG_PASSWORD_NOT_MATCH,
    LANG_DONE,
    LANG_TOTAL_SALES,
    LANG_DAYLY_SALES,
    LANG_MONTHLY_SALES,
    LANG_YEARLY_SALES,
    LANG_KEY_SLOT,
    LANG_PRICE_CAPACITY,
    LANG_PRICE,
    LANG_CAPACITY,
    LANG_HUMIDITY_ONOFF,
    LANG_DROP_SENSOR,
    LANG_ERROR_LOG,
    LANG_MOTOR_ERROR,
    LANG_PAYMENT_SYSERR,
    LANG_CLEAR_ERROR,
    LANG_CLEAR_ERROR_HW,
    LANG_NO_ERROR,
    LANG_NV11_ERROR,
    LANG_TEST_SLOT,
    LANG_NOTE_INOUT,
    LANG_TOTAL_NOTE_IN,
    LANG_TOTAL_NOTE_OUT,
    LANG_CLEAR_BALANCE,
    LANG_SET_HUMIDITY,
    LANG_SET_TIME,
    LANG_BILL_CHANGE,
    LANG_ONOFF,
    LANG_NOTE_FILL,
    LANG_EMPTY_RECYCLER,
    LANG_VIEW_INFO,
    LANG_SLOT_NUMBER,
    LANG_COLUMN_NUMBER,
    LANG_ROW_NUMBER,
    LANG_ACCEPT_NOTE,
    LANG_REFUND_NOTE,
    LANG_ACCEPT_ERROR,
    LANG_LANGUAGE,
    LANG_VIETNAMESE,
    LANG_ENGLISH,
    LANG_CHANGE_PASSWORD,
    LANG_VIEW_VEND_ID,
    LANG_SET_SERVER_IP,
    LANG_ADVANCE_SETTING,
    LANG_QUANTITY,
    LANG_AMOUNT,
    LANG_ON,
    LANG_OFF,
    LANG_FACTORY_RESET,
    LANG_CALLING,
    LANG_NO_ANSWER,
    LANG_NUMBER_BUSY,
    LANG_SIGNAL_LOST,
    LANG_CALLING_ERROR,
    LANG_OPERATOR_NUMBER,
    LANG_AUDIO_SETTING,
    LANG_AUDIO_ONOFF,
    LANG_MAIN_VOLUME,
    LANG_CALL_VOLUME,
    LANG_MICROPHONE_LEVEL,
    LANG_STACK_STORD_NOTE_ERROR,
    /**/
    LANG_TESTING_SLOT,
    LANG_ERROR_SLOT,
    /**/
    /**/
    LANG_VIEW_FIRMWARE,
    LANG_FIRMWARE_CURRENT,
    /**/
    LANG_INIT_PARAMETER,
    LANG_CHANGE_PASSWORD_1,
    LANG_CHANGE_PASSWORD_2,
    /**/
    LANG_DROP_SENSOR_ERROR,
    LANG_CLEAR_ERROR_DROP_SENSOR,
    /**/
    LANG_YES_NO,
    LANG_CONFIRM_RESET,

    LANG_N1_TIME,
    LANG_N2_CAPACITY,
    LANG_N3_CAPACITY,
    LANG_CLEAR_SELL,

    LANG_ID_MAX
} language_id_t;

void Lang_RestoreFromMemory();
void SetCurrentLanguage(language_t language);
language_t GetCurrentLanguage();
const uint16_t* Lang_GetText(language_id_t langId);

#endif /* LANGUAGE_H */
